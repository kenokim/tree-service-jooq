
buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}

	dependencies {
		classpath 'org.jooq:jooq-codegen:3.18.0'
		classpath 'mysql:mysql-connector-java:8.0.27'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'nu.studer.jooq' version '8.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.jooq:jooq-codegen:3.18.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	jooqGenerator 'com.mysql:mysql-connector-j'
}

tasks.named('test') {
	useJUnitPlatform()
}

apply plugin: 'java'

import org.jooq.codegen.GenerationTool
import org.jooq.meta.jaxb.*
GenerationTool.generate(new Configuration()
		.withJdbc(new Jdbc()
				.withDriver('com.mysql.cj.jdbc.Driver')
				.withUrl('jdbc:mysql://192.168.254.16:3306/tree_service')
				.withUser('root')
				.withPassword('1234'))
		.withGenerator(new Generator()
				.withDatabase(new Database())
				.withGenerate(new Generate()
						.withPojos(true)
						.withDaos(true))
				.withTarget(new Target()
						.withPackageName('com.example.treeservice.jooq')
						.withDirectory('src/main/java'))))